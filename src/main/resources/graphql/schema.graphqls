type Course {
    subject: String
    courseNum: Int
    title: String
    section: String
    crn: Int
    campus: String
    credits: Int
    capacity: String
    requests: String
    delivery: String
}
type Schedule{
    courses: [Course]
    freeTime: Int
}

type SuccessCourse {
    courses: [Course]
}
type SuccessSchedule{
    schedules: [Schedule]
}

type ErrorCourse {
    error: String
    message: String
}
type ErrorSchedule {
    error: String
    message: String
}

union CourseResult = SuccessCourse | ErrorCourse
union ScheduleResult = SuccessSchedule | ErrorSchedule

type Query {
    getCourseByInfo(
        subject: [String]
        courseNum: Int
        campus: [String]
        attributes: [String]
        delivery: [String]
        term: String
        openWaitlist: String
        crn: Int
        partOfTerm: [String]
        level: String
        courseTitle: String
        daysFilter: [String]
        creditHours: Int
        startEndTime: [String]
    ): CourseResult
    getCourseByCRN(
        crn: Int
        term: String
    ): CourseResult
    getScheduleByCourses(
        courses: [String]
        campus: [String]
        term: String
        optimizeFreeTime: Boolean
        preferredStart: String
        preferredEnd: String
    ): ScheduleResult
}
